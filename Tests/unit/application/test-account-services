from application.services.account_creation_services import AccountCreationService
from domain.entities.account import AccountType
from infrastructure.repositories.account_repository_impl import InMemoryAccountRepository

def test_create_savings_account_with_insufficient_initial_deposit():
    repo = InMemoryAccountRepository()
    service = AccountCreationService(repo)
    try:
        service.create_account(AccountType.SAVINGS, 50.0)
    except ValueError as e:
        assert str(e) == "Minimum initial deposit for savings is 100.0"

def test_create_valid_checking_account():
    repo = InMemoryAccountRepository()
    service = AccountCreationService(repo)
    account_id = service.create_account(AccountType.CHECKING, 50.0)
    account = repo.get_account_by_id(account_id)
    assert account.balance == 50.0